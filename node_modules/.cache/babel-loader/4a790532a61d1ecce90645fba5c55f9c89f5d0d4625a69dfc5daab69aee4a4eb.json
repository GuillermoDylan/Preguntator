{"ast":null,"code":"var _jsxFileName = \"/Users/blanc/Desktop/Preguntador/preguntador/src/components/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport fs from \"fs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleFileUpload = () => {\n    if (!selectedFile) {\n      console.log(\"No se ha seleccionado ningún archivo.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Guardar el archivo temporalmente en el servidor (opcional)\n      const temporaryFilePath = \"./temp.txt\";\n      fs.writeFile(temporaryFilePath, fileContent, \"utf8\", err => {\n        if (err) {\n          console.error(\"Error al escribir el archivo temporal:\", err);\n          return;\n        }\n\n        // Llamar al script de desordenar preguntas y respuestas\n        callDesordenarScript(temporaryFilePath);\n      });\n    };\n    reader.readAsText(selectedFile);\n  };\n  const callDesordenarScript = filePath => {\n    // Llamar al script de desordenar preguntas y respuestas (código anterior)\n    // ... tu código aquí ...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Desordenar Preguntas y Respuestas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(FileUploader, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","fs","jsxDEV","_jsxDEV","FileUploader","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","handleFileUpload","console","log","reader","FileReader","onload","fileContent","result","temporaryFilePath","writeFile","err","error","callDesordenarScript","readAsText","filePath","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/blanc/Desktop/Preguntador/preguntador/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport fs from \"fs\";\n\nconst FileUploader = () => {\n\tconst [selectedFile, setSelectedFile] = useState(null);\n\n\tconst handleFileChange = (event) => {\n\t\tconst file = event.target.files[0];\n\t\tsetSelectedFile(file);\n\t};\n\n\tconst handleFileUpload = () => {\n\t\tif (!selectedFile) {\n\t\t\tconsole.log(\"No se ha seleccionado ningún archivo.\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst reader = new FileReader();\n\t\treader.onload = (event) => {\n\t\t\tconst fileContent = event.target.result;\n\n\t\t\t// Guardar el archivo temporalmente en el servidor (opcional)\n\t\t\tconst temporaryFilePath = \"./temp.txt\";\n\t\t\tfs.writeFile(temporaryFilePath, fileContent, \"utf8\", (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.error(\"Error al escribir el archivo temporal:\", err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Llamar al script de desordenar preguntas y respuestas\n\t\t\t\tcallDesordenarScript(temporaryFilePath);\n\t\t\t});\n\t\t};\n\t\treader.readAsText(selectedFile);\n\t};\n\n\tconst callDesordenarScript = (filePath) => {\n\t\t// Llamar al script de desordenar preguntas y respuestas (código anterior)\n\t\t// ... tu código aquí ...\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"file\" onChange={handleFileChange} />\n\t\t\t<button onClick={handleFileUpload}>\n\t\t\t\tDesordenar Preguntas y Respuestas\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,eAAe,CAACG,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACP,YAAY,EAAE;MAClBQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD;IACD;IAEA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIT,KAAK,IAAK;MAC1B,MAAMU,WAAW,GAAGV,KAAK,CAACE,MAAM,CAACS,MAAM;;MAEvC;MACA,MAAMC,iBAAiB,GAAG,YAAY;MACtCpB,EAAE,CAACqB,SAAS,CAACD,iBAAiB,EAAEF,WAAW,EAAE,MAAM,EAAGI,GAAG,IAAK;QAC7D,IAAIA,GAAG,EAAE;UACRT,OAAO,CAACU,KAAK,CAAC,wCAAwC,EAAED,GAAG,CAAC;UAC5D;QACD;;QAEA;QACAE,oBAAoB,CAACJ,iBAAiB,CAAC;MACxC,CAAC,CAAC;IACH,CAAC;IACDL,MAAM,CAACU,UAAU,CAACpB,YAAY,CAAC;EAChC,CAAC;EAED,MAAMmB,oBAAoB,GAAIE,QAAQ,IAAK;IAC1C;IACA;EAAA,CACA;EAED,oBACCxB,OAAA;IAAAyB,QAAA,gBACCzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD/B,OAAA;MAAQgC,OAAO,EAAEtB,gBAAiB;MAAAe,QAAA,EAAC;IAEnC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAAC7B,EAAA,CA9CID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}