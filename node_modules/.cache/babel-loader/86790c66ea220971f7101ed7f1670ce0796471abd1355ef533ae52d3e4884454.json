{"ast":null,"code":"export function shuffleArray(array) {\n  // Implementación del algoritmo de Fisher-Yates para desordenar un array\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nexport function desordenarPreguntasRespuestas(texto) {\n  const lines = texto.split(\"\\n\");\n  const preguntasRespuestas = [];\n  let preguntaActual = null;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    if (line.startsWith(\"Pregunta\")) {\n      preguntaActual = {\n        pregunta: line,\n        respuestas: []\n      };\n      preguntasRespuestas.push(preguntaActual);\n    } else if (line.startsWith(\"a.\") || line.startsWith(\"b.\") || line.startsWith(\"c.\") || line.startsWith(\"d.\") || line.startsWith(\"e.\") || line.startsWith(\"f.\") || line.startsWith(\"g.\") || line.startsWith(\"h.\") || line.startsWith(\"i.\") || line.startsWith(\"j.\") || line.startsWith(\"k.\") || line.startsWith(\"l.\")) {\n      preguntaActual.respuestas.push(line);\n    }\n  }\n\n  // Desordenar las respuestas de cada pregunta\n  preguntasRespuestas.forEach(pregunta => {\n    shuffleArray(pregunta.respuestas);\n  });\n\n  // Desordenar las preguntas\n  shuffleArray(preguntasRespuestas);\n\n  // Generar el nuevo texto con las preguntas y respuestas desordenadas\n  let nuevoTexto = \"\";\n  preguntasRespuestas.forEach((pregunta, index) => {\n    nuevoTexto += `${pregunta.pregunta}\\n`;\n    pregunta.respuestas.forEach(respuesta => {\n      nuevoTexto += `${respuesta}\\n`;\n    });\n    nuevoTexto += \"\\n\";\n  });\n  return nuevoTexto;\n}\n\n// Ejemplo de uso\n// const textoOriginal = `1. ¿Esta es la pregunta 1?\n//   a. Respuesta 1\n//   b. Respuesta 2\n//   c. Respuesta 3\n//   d. Hola muy buenas tardessssssss\n\n//   2. Esta es la pregunta 2\n//   a. ¿Qué tal?\n//   b. No tienen que tener el mismo número de opciones\n\n//   3. xx\n//   a. holi\n//   b. si\n//   c. x`;\n\n// const textoDesordenado = desordenarPreguntasRespuestas(textoOriginal);\n// console.log(textoDesordenado);","map":{"version":3,"names":["shuffleArray","array","i","length","j","Math","floor","random","desordenarPreguntasRespuestas","texto","lines","split","preguntasRespuestas","preguntaActual","line","trim","startsWith","pregunta","respuestas","push","forEach","nuevoTexto","index","respuesta"],"sources":["/Users/blanc/Desktop/Preguntador/preguntador/src/functions/fileFunctions.js"],"sourcesContent":["export function shuffleArray(array) {\n\t// Implementación del algoritmo de Fisher-Yates para desordenar un array\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n}\n\nexport function desordenarPreguntasRespuestas(texto) {\n\tconst lines = texto.split(\"\\n\");\n\tconst preguntasRespuestas = [];\n\tlet preguntaActual = null;\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i].trim();\n\n\t\tif (line.startsWith(\"Pregunta\")) {\n\t\t\tpreguntaActual = {\n\t\t\t\tpregunta: line,\n\t\t\t\trespuestas: [],\n\t\t\t};\n\t\t\tpreguntasRespuestas.push(preguntaActual);\n\t\t} else if (\n\t\t\tline.startsWith(\"a.\") ||\n\t\t\tline.startsWith(\"b.\") ||\n\t\t\tline.startsWith(\"c.\") ||\n\t\t\tline.startsWith(\"d.\") ||\n\t\t\tline.startsWith(\"e.\") ||\n\t\t\tline.startsWith(\"f.\") ||\n\t\t\tline.startsWith(\"g.\") ||\n\t\t\tline.startsWith(\"h.\") ||\n\t\t\tline.startsWith(\"i.\") ||\n\t\t\tline.startsWith(\"j.\") ||\n\t\t\tline.startsWith(\"k.\") ||\n\t\t\tline.startsWith(\"l.\")\n\t\t) {\n\t\t\tpreguntaActual.respuestas.push(line);\n\t\t}\n\t}\n\n\t// Desordenar las respuestas de cada pregunta\n\tpreguntasRespuestas.forEach((pregunta) => {\n\t\tshuffleArray(pregunta.respuestas);\n\t});\n\n\t// Desordenar las preguntas\n\tshuffleArray(preguntasRespuestas);\n\n\t// Generar el nuevo texto con las preguntas y respuestas desordenadas\n\tlet nuevoTexto = \"\";\n\tpreguntasRespuestas.forEach((pregunta, index) => {\n\t\tnuevoTexto += `${pregunta.pregunta}\\n`;\n\t\tpregunta.respuestas.forEach((respuesta) => {\n\t\t\tnuevoTexto += `${respuesta}\\n`;\n\t\t});\n\t\tnuevoTexto += \"\\n\";\n\t});\n\n\treturn nuevoTexto;\n}\n\n// Ejemplo de uso\n// const textoOriginal = `1. ¿Esta es la pregunta 1?\n//   a. Respuesta 1\n//   b. Respuesta 2\n//   c. Respuesta 3\n//   d. Hola muy buenas tardessssssss\n\n//   2. Esta es la pregunta 2\n//   a. ¿Qué tal?\n//   b. No tienen que tener el mismo número de opciones\n\n//   3. xx\n//   a. holi\n//   b. si\n//   c. x`;\n\n// const textoDesordenado = desordenarPreguntasRespuestas(textoOriginal);\n// console.log(textoDesordenado);\n"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAE;EACnC;EACA,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;EAC5C;AACD;AAEA,OAAO,SAASM,6BAA6BA,CAACC,KAAK,EAAE;EACpD,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC;EAC/B,MAAMC,mBAAmB,GAAG,EAAE;EAC9B,IAAIC,cAAc,GAAG,IAAI;EAEzB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,KAAK,CAACP,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,MAAMY,IAAI,GAAGJ,KAAK,CAACR,CAAC,CAAC,CAACa,IAAI,CAAC,CAAC;IAE5B,IAAID,IAAI,CAACE,UAAU,CAAC,UAAU,CAAC,EAAE;MAChCH,cAAc,GAAG;QAChBI,QAAQ,EAAEH,IAAI;QACdI,UAAU,EAAE;MACb,CAAC;MACDN,mBAAmB,CAACO,IAAI,CAACN,cAAc,CAAC;IACzC,CAAC,MAAM,IACNC,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IACrBF,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,EACpB;MACDH,cAAc,CAACK,UAAU,CAACC,IAAI,CAACL,IAAI,CAAC;IACrC;EACD;;EAEA;EACAF,mBAAmB,CAACQ,OAAO,CAAEH,QAAQ,IAAK;IACzCjB,YAAY,CAACiB,QAAQ,CAACC,UAAU,CAAC;EAClC,CAAC,CAAC;;EAEF;EACAlB,YAAY,CAACY,mBAAmB,CAAC;;EAEjC;EACA,IAAIS,UAAU,GAAG,EAAE;EACnBT,mBAAmB,CAACQ,OAAO,CAAC,CAACH,QAAQ,EAAEK,KAAK,KAAK;IAChDD,UAAU,IAAK,GAAEJ,QAAQ,CAACA,QAAS,IAAG;IACtCA,QAAQ,CAACC,UAAU,CAACE,OAAO,CAAEG,SAAS,IAAK;MAC1CF,UAAU,IAAK,GAAEE,SAAU,IAAG;IAC/B,CAAC,CAAC;IACFF,UAAU,IAAI,IAAI;EACnB,CAAC,CAAC;EAEF,OAAOA,UAAU;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}