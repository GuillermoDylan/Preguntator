{"ast":null,"code":"function shuffleArray(array) {\n  // Implementación del algoritmo de Fisher-Yates para desordenar un array\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nexport function desordenarPreguntasRespuestas(texto) {\n  const lines = texto.split(\"\\n\");\n  const preguntasRespuestas = [];\n  let preguntaActual = null;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    if (line.startsWith(\"?:\")) {\n      preguntaActual = {\n        pregunta: line.substring(3),\n        // Eliminar el prefijo '?:'\n        respuestas: [],\n        respuestasCorrectas: []\n      };\n      preguntasRespuestas.push(preguntaActual);\n    } else if (line.startsWith(\"$\")) {\n      const respuesta = line.substring(2); // Eliminar el prefijo '$'\n      preguntaActual.respuestas.push(respuesta);\n      preguntaActual.respuestasCorrectas.push(respuesta);\n    } else if (line.startsWith(\"a.\") || line.startsWith(\"b.\") || line.startsWith(\"c.\") || line.startsWith(\"d.\")) {\n      const respuesta = line.substring(2); // Eliminar el prefijo 'a.', 'b.', 'c.', 'd.'\n      preguntaActual.respuestas.push(respuesta);\n    }\n  }\n\n  // Desordenar las respuestas de cada pregunta\n  preguntasRespuestas.forEach(pregunta => {\n    shuffleArray(pregunta.respuestas);\n  });\n\n  // Desordenar el orden de las preguntas\n  shuffleArray(preguntasRespuestas);\n\n  // Generar el nuevo texto con las preguntas y respuestas desordenadas\n  let nuevoTexto = \"\";\n  preguntasRespuestas.forEach((pregunta, index) => {\n    nuevoTexto += `?: ${pregunta.pregunta}\\n`;\n    pregunta.respuestas.forEach(respuesta => {\n      if (pregunta.respuestasCorrectas.includes(respuesta)) {\n        nuevoTexto += `$${respuesta}\\n`;\n      } else {\n        nuevoTexto += `${respuesta}\\n`;\n      }\n    });\n    nuevoTexto += \"\\n\";\n  });\n  return nuevoTexto;\n}\n\n// Ejemplo de uso\n//   const textoOriginal = `?: ¿Esta es la pregunta 1?\n//   $a. Respuesta 1\n//   b. Respuesta 2\n//   $c. Respuesta 3\n//   d. Hola muy buenas tardessssssss\n\n//   ?: Esta es la pregunta 2\n//   $a. ¿Qué tal?\n//   b. No tienen que tener el mismo número de opciones\n\n//   ?: xx\n//   a. holi\n//   $b. si\n//   c. x`;\n\n//   const textoDesordenado = desordenarPreguntasRespuestas(textoOriginal);\n//   console.log(textoDesordenado);","map":{"version":3,"names":["shuffleArray","array","i","length","j","Math","floor","random","desordenarPreguntasRespuestas","texto","lines","split","preguntasRespuestas","preguntaActual","line","trim","startsWith","pregunta","substring","respuestas","respuestasCorrectas","push","respuesta","forEach","nuevoTexto","index","includes"],"sources":["/Users/blanc/Desktop/Preguntador/preguntador/src/functions/fileFunctions.js"],"sourcesContent":["function shuffleArray(array) {\n\t// Implementación del algoritmo de Fisher-Yates para desordenar un array\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n}\n\nexport function desordenarPreguntasRespuestas(texto) {\n\tconst lines = texto.split(\"\\n\");\n\tconst preguntasRespuestas = [];\n\tlet preguntaActual = null;\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i].trim();\n\n\t\tif (line.startsWith(\"?:\")) {\n\t\t\tpreguntaActual = {\n\t\t\t\tpregunta: line.substring(3), // Eliminar el prefijo '?:'\n\t\t\t\trespuestas: [],\n\t\t\t\trespuestasCorrectas: [],\n\t\t\t};\n\t\t\tpreguntasRespuestas.push(preguntaActual);\n\t\t} else if (line.startsWith(\"$\")) {\n\t\t\tconst respuesta = line.substring(2); // Eliminar el prefijo '$'\n\t\t\tpreguntaActual.respuestas.push(respuesta);\n\t\t\tpreguntaActual.respuestasCorrectas.push(respuesta);\n\t\t} else if (\n\t\t\tline.startsWith(\"a.\") ||\n\t\t\tline.startsWith(\"b.\") ||\n\t\t\tline.startsWith(\"c.\") ||\n\t\t\tline.startsWith(\"d.\")\n\t\t) {\n\t\t\tconst respuesta = line.substring(2); // Eliminar el prefijo 'a.', 'b.', 'c.', 'd.'\n\t\t\tpreguntaActual.respuestas.push(respuesta);\n\t\t}\n\t}\n\n\t// Desordenar las respuestas de cada pregunta\n\tpreguntasRespuestas.forEach((pregunta) => {\n\t\tshuffleArray(pregunta.respuestas);\n\t});\n\n\t// Desordenar el orden de las preguntas\n\tshuffleArray(preguntasRespuestas);\n\n\t// Generar el nuevo texto con las preguntas y respuestas desordenadas\n\tlet nuevoTexto = \"\";\n\tpreguntasRespuestas.forEach((pregunta, index) => {\n\t\tnuevoTexto += `?: ${pregunta.pregunta}\\n`;\n\t\tpregunta.respuestas.forEach((respuesta) => {\n\t\t\tif (pregunta.respuestasCorrectas.includes(respuesta)) {\n\t\t\t\tnuevoTexto += `$${respuesta}\\n`;\n\t\t\t} else {\n\t\t\t\tnuevoTexto += `${respuesta}\\n`;\n\t\t\t}\n\t\t});\n\t\tnuevoTexto += \"\\n\";\n\t});\n\n\treturn nuevoTexto;\n}\n\n// Ejemplo de uso\n//   const textoOriginal = `?: ¿Esta es la pregunta 1?\n//   $a. Respuesta 1\n//   b. Respuesta 2\n//   $c. Respuesta 3\n//   d. Hola muy buenas tardessssssss\n\n//   ?: Esta es la pregunta 2\n//   $a. ¿Qué tal?\n//   b. No tienen que tener el mismo número de opciones\n\n//   ?: xx\n//   a. holi\n//   $b. si\n//   c. x`;\n\n//   const textoDesordenado = desordenarPreguntasRespuestas(textoOriginal);\n//   console.log(textoDesordenado);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}