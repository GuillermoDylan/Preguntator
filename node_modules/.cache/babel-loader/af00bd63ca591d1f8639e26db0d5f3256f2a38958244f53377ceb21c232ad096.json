{"ast":null,"code":"var _jsxFileName = \"/Users/blanc/Desktop/Preguntador/preguntador/src/components/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { desordenarPreguntasRespuestas } from \"../functions/fileFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"text/plain\") {\n      setSelectedFile(file);\n    } else {\n      console.log(\"Solo se permiten archivos de texto (.txt)\");\n      setSelectedFile(null);\n    }\n  };\n  const handleFileUpload = () => {\n    if (!selectedFile) {\n      console.log(\"No se ha seleccionado ningún archivo.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      console.log(\"Preguntas y respuestas sin desordenar:\", fileContent);\n\n      // Llamada a la función desordenarPreguntasRespuestas\n      const preguntasRespuestasDesordenadas = desordenarPreguntasRespuestas(fileContent);\n      console.log(\"Preguntas y respuestas desordenadas:\", preguntasRespuestasDesordenadas);\n    };\n    reader.readAsText(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Desordenar Preguntas y Respuestas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_s(FileUploader, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","desordenarPreguntasRespuestas","jsxDEV","_jsxDEV","FileUploader","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","type","console","log","handleFileUpload","reader","FileReader","onload","fileContent","result","preguntasRespuestasDesordenadas","readAsText","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/blanc/Desktop/Preguntador/preguntador/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { desordenarPreguntasRespuestas } from \"../functions/fileFunctions\";\n\nconst FileUploader = () => {\n\tconst [selectedFile, setSelectedFile] = useState(null);\n\n\tconst handleFileChange = (event) => {\n\t\tconst file = event.target.files[0];\n\n\t\tif (file && file.type === \"text/plain\") {\n\t\t\tsetSelectedFile(file);\n\t\t} else {\n\t\t\tconsole.log(\"Solo se permiten archivos de texto (.txt)\");\n\t\t\tsetSelectedFile(null);\n\t\t}\n\t};\n\n\tconst handleFileUpload = () => {\n\t\tif (!selectedFile) {\n\t\t\tconsole.log(\"No se ha seleccionado ningún archivo.\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst reader = new FileReader();\n\t\treader.onload = (event) => {\n\t\t\tconst fileContent = event.target.result;\n\n\t\t\tconsole.log(\"Preguntas y respuestas sin desordenar:\", fileContent);\n\n\t\t\t// Llamada a la función desordenarPreguntasRespuestas\n\t\t\tconst preguntasRespuestasDesordenadas =\n\t\t\t\tdesordenarPreguntasRespuestas(fileContent);\n\t\t\tconsole.log(\n\t\t\t\t\"Preguntas y respuestas desordenadas:\",\n\t\t\t\tpreguntasRespuestasDesordenadas\n\t\t\t);\n\t\t};\n\t\treader.readAsText(selectedFile);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n\t\t\t<button onClick={handleFileUpload}>\n\t\t\t\tDesordenar Preguntas y Respuestas\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,6BAA6B,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MACvCN,eAAe,CAACG,IAAI,CAAC;IACtB,CAAC,MAAM;MACNI,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDR,eAAe,CAAC,IAAI,CAAC;IACtB;EACD,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACV,YAAY,EAAE;MAClBQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD;IACD;IAEA,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIV,KAAK,IAAK;MAC1B,MAAMW,WAAW,GAAGX,KAAK,CAACE,MAAM,CAACU,MAAM;MAEvCP,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEK,WAAW,CAAC;;MAElE;MACA,MAAME,+BAA+B,GACpCrB,6BAA6B,CAACmB,WAAW,CAAC;MAC3CN,OAAO,CAACC,GAAG,CACV,sCAAsC,EACtCO,+BACD,CAAC;IACF,CAAC;IACDL,MAAM,CAACM,UAAU,CAACjB,YAAY,CAAC;EAChC,CAAC;EAED,oBACCH,OAAA;IAAAqB,QAAA,gBACCrB,OAAA;MAAOU,IAAI,EAAC,MAAM;MAACY,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D3B,OAAA;MAAQ4B,OAAO,EAAEf,gBAAiB;MAAAQ,QAAA,EAAC;IAEnC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAACzB,EAAA,CA7CID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}